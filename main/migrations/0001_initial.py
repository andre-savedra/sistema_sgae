# Generated by Django 3.2.12 on 2022-02-10 17:09

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ambientes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Cargos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('nivelAcesso', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Usuarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=55)),
                ('idUserFK', models.BigIntegerField()),
                ('email', models.CharField(max_length=80)),
                ('fone', models.CharField(max_length=15)),
                ('ativo', models.BooleanField(default=False)),
                ('nivelAcessoFK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.cargos')),
            ],
        ),
        migrations.CreateModel(
            name='Tarefas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80)),
                ('descricao', models.CharField(max_length=500)),
                ('idStatus', models.CharField(choices=[('1', 'Iniciada'), ('2', 'Em Análise'), ('3', 'Em Andamento'), ('4', 'Finalizada')], max_length=15)),
                ('prazo', models.DateTimeField()),
                ('dataInicio', models.DateTimeField(default=datetime.datetime(2022, 2, 10, 17, 9, 40, 717132, tzinfo=utc))),
                ('dataFim', models.DateTimeField(blank=True, null=True)),
                ('idAmbienteFK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.ambientes')),
                ('idResponsavelFK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='idResponsavelFK', to='main.usuarios')),
                ('idSolicitanteFK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='idSolicitanteFK', to='main.usuarios')),
            ],
        ),
        migrations.CreateModel(
            name='Fotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=55)),
                ('idStatus', models.CharField(choices=[('1', 'Iniciada'), ('2', 'Em Análise'), ('3', 'Em Andamento'), ('4', 'Finalizada')], max_length=15)),
                ('image', models.ImageField(blank=True, null=True, upload_to=main.models.upload_image_task)),
                ('idTarefaFK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tarefas')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('fone', models.CharField(max_length=15)),
                ('ativo', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('nivelAcessoFK', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.cargos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
